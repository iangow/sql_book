```{r}
cust_products_agg <-
  purchases %>%
  distinct(customer_id, product) %>%
  group_by(customer_id) %>%
  window_order(product) %>%
  summarize(products = sql("array_agg(product ORDER BY product)")) %>%
  collect()

cust_products_agg
```

```{python}
import pandas as pd

# Get data from database
from pandas.io.sql import read_sql
import sqlalchemy as sa
from sqlalchemy import create_engine
engine = create_engine('postgresql://localhost/igow')
conn = engine.connect()
from sqlalchemy.dialects.postgresql import ARRAY, TEXT
```

```{python}
sql = """
  SELECT customer_id, 
    array_agg(DISTINCT product) AS products
  FROM sql_book.purchases
  GROUP BY customer_id
"""
```

```{sql}
#| connection: pg
SELECT customer_id, 
array_agg(DISTINCT product) AS products
FROM sql_book.purchases
GROUP BY customer_id
```

```{python}
df = pd.read_sql(sa.text(sql), conn)
```

```{python}
from itertools import combinations

def get_tuples(x, n = 2):
  return [tuple for tuple in combinations(x, n)]

df['pairs'] = df['products'].map(get_tuples)
df = df.drop(columns=['products'])

res = df.to_sql("product_pairs", engine, schema="sql_book", 
                if_exists="replace", index=False,
                dtype = {'pairs': ARRAY(TEXT)})
conn.close()
engine.dispose()
print(df)
```

```{sql}
#| connection: pg
SELECT customer_id, 
unnest(pairs[1:][1:1]) AS product_1, 
unnest(pairs[1:][2:2]) AS product_2
FROM product_pairs
ORDER BY 1, 2, 3
```

```{r}
cust_products <-
  purchases %>%
  distinct(customer_id, product) %>%
  collect()

cust_nested <- 
  cust_products %>% 
  nest(products = product, .by = customer_id)
```

```{r}
get_combns <- function(x, n = 2) {
  
  xx <- x[[1]]
  res <- list()
  
  if (length(xx) >= n) {
    temp <- matrix(combn(sort(xx), n), nrow = n)
    for (i in 1:(dim(temp)[2])) {
      res <- append(res, list(temp[, i]))
    }
  }
  return(res)
}
```


```{r}
cust_nested %>% 
  mutate(product = map(products, get_combns, n = 2)) %>%
  select(-products) %>%
  unnest(product) %>%
  unnest_wider(product, names_sep = "_") %>%
  kable()
```

```{r}
cust_nested %>% 
  mutate(product = map(products, get_combns, n = 3)) %>%
  select(-products) %>%
  unnest(product) %>%
  unnest_wider(product, names_sep = "_") %>%
  kable()
```
